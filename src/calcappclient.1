.\" --------------------------------------------------------------------------
.\"
.\"              //===//   //=====   //===//   //       //   //===//
.\"             //    //  //        //    //  //       //   //    //
.\"            //===//   //=====   //===//   //       //   //===<<
.\"           //   \\         //  //        //       //   //    //
.\"          //     \\  =====//  //        //=====  //   //===//   Version III
.\"
.\" ------------- An Efficient RSerPool Prototype Implementation -------------
.\"
.\" Copyright (C) 2002-2025 by Thomas Dreibholz
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Contact: thomas.dreibholz@gmail.com
.\"
.\" ###### Setup ############################################################
.Dd November 13, 2024
.Dt CalcAppClient 1
.Os CalcApp Client
.\" ###### Name #############################################################
.Sh NAME
.Nm calcappclient
.Nd RSerPool Client (PU) for the CalcApp service
.\" ###### Synopsis #########################################################
.Sh SYNOPSIS
.Nm calcappclient
.Op Fl poolhandle=pool_handle
.Op Fl jobinterval=seconds
.Op Fl jobsize=calculations
.Op Fl keepalivetransmissioninterval=milliseconds
.Op Fl keepalivetimeoutinterval=milliseconds
.Op Fl object=name
.Op Fl runtime=seconds
.Op Fl scalar=scalar_file
.Op Fl vector=vector_file
.Op Fl cspinterval=milliseconds
.Op Fl cspserver=address:port
.Op Fl logappend=filename
.Op Fl logcolor=on|off
.Op Fl logfile=filename
.Op Fl loglevel=0-9
.\" ###### Description ######################################################
.Sh DESCRIPTION
.Nm calcappclient
is a Reliable Server Pooling (RSerPool) pool user (PU) for the CalcApp
performance testing service. For a detailed description of the underlying
protocol, see
https://duepublico.uni-duisburg-essen.de/servlets/DerivateServlet/Derivate-16326/Dre2006_final.pdf .
.Pp
.\" ###### Arguments ########################################################
.Sh ARGUMENTS
The following options are available:
.Bl -tag -width indent
.It Fl poolhandle=pool_handle
Sets the PH to a non-default value; otherwise, the default setting is
"CalcAppPool".
.\" ====== Service parameters ===============================================
.It Service Parameters:
.Bl -tag -width indent
.It Fl jobinterval=seconds
Sets the job interval in seconds.
Floating-point values (e.g. 30.125) are possible.
.It Fl jobsize=seconds
Sets the job size in seconds.
Floating-point values (e.g. 8.75) are possible.
.It Fl keepalivetransmissioninterval=milliseconds
Sets the session keep-alive interval in milliseconds.
.It Fl keepalivetimeoutinterval=milliseconds
Sets the session keep-alive timeout in milliseconds.
.It Fl object=name
Sets the object name for scalar hierarchy.
.It Fl runtime=seconds
After the configured number of seconds, the service is shut down.
Floating-point values (e.g. 30.125) are possible.
.It Fl scalar=scalar_file
Sets the name of vector scalar file.
.It Fl vector=vector_file
Sets the name of vector output file.
.El
.\" ====== ASAP Protocol ====================================================
.It ASAP Protocol Parameters:
.Bl -tag -width indent
.It Fl registrar=address:port
Adds a static PR entry into the Registrar Table.
It is possible to add multiple entries.
.It Fl registrarannouncetimeout=milliseconds
Sets the timeout for ASAP announces via multicast.
.It Fl registrarconnecttimeout=milliseconds
Sets the timeout for ASAP connection establishment.
.It Fl registrarconnectmaxtrials=trials
Sets the maximum number of ASAP connection establishment trials.
.It Fl registrarrequesttimeout=milliseconds
Sets the timeout for ASAP requests.
.It Fl registrarresponsetimeout=milliseconds
Sets the timeout for waiting to receive ASAP responses.
.It Fl registrarrequestmaxtrials=trials
Sets the maximum number of ASAP request trials.
.El
.\" ====== Component Status Protocol ========================================
.It Component Status Protocol (CSP) Parameters:
.Bl -tag -width indent
.It Fl cspinterval=milliseconds
Sets the interval for the CSP status updates in milliseconds. By default, the
content of the environment variable CSP_INTERVAL is used. If not defined, no
CSP status reports will be sent.
.It Fl cspserver=address:port
Sets the address of a CSP monitor server. By default, the content of the
environment variable CSP_SERVER is used. If not defined, no CSP status reports
will be sent.
.El
.\" ====== Logging ==========================================================
.It Logging Parameters:
.Bl -tag -width indent
.It Fl logappend=filename
Write logging output to a file (default is stdout); output will be appended to given file.
.It Fl logcolor=on|off
Turns ANSI colorization of the logging output on or off.
.It Fl logfile=filename
Write logging output to a file (default is stdout); given file will be overwritten.
.It Fl loglevel=0-9
Sets the logging verbosity from 0 (none) to 9 (very verbose).
It is recommended to use at least a value of 2 to see possibly
important error messages and warnings.
.El
.El
.Pp
.\" ###### Environment ######################################################
.Sh ENVIRONMENT
.Nm calcappclient
uses the environment variables CSP_SERVER and CSP_INTERVAL to define a CSP
server to send reports to in the specified interval.
.\" ###### Diagnostics ######################################################
.Sh DIAGNOSTICS
If loglevel>0, log messages will be printed to stdout or into a specified
log file.
.\" ###### See also #########################################################
.Sh SEE ALSO
For a detailed introduction to RSerPool, see:
.br
https://duepublico.uni-duisburg-essen.de/servlets/DerivateServlet/Derivate-16326/Dre2006_final.pdf
.Pp
Thomas Dreibholz's RSerPool Page:
.br
https://www.nntb.no/~dreibh/rserpool/
